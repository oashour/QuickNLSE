#!/bin/bash

WRONG_FLAG=69
# Define flags
cflag='false'   # add CPU
gflag='false' 	# add GPU
mflag='false' 	# add MPI
aflag='false'   # everything
pflag='unknown'
hflag='false'

# Get arguments
while getopts 'cgmap:h' flag; do
  case "${flag}" in
    c) cflag='true' ;;
    g) gflag='true' ;;
    m) mflag='true' ;;
	f) fflag='true' ;;
    a) aflag='true' ;;
    p) pflag="${OPTARG}" ;;
	h) hflag='true' ;;
    *) echo "Unexpected option ${flag}" 
	   exit $WRONG_FLAG;;
  esac
done

if [[ "${aflag}" = "true" ]]
then
	cflag='true'
	gflag='true'
	mflag='true'
	fflag='true'
fi

if [[ "$rflag" == "false" && "$cflag" == "false" && "$xflag" == "false" ]]
then
	hflag="true"
	echo "Nothing to merge. See help below."
fi

if [[ "${pflag}" = "x" ]]
then
	cd $NLSE/1D_x && echo "`pwd`"
elif [[ "${pflag}" = "t" ]]
then
	cd $NLSE/1D_t && echo "`pwd`" 
else
	echo "Unknown pflag. Terminating."
fi

#title=
xlabel="Number of nodes N_${pflag}"
ylabel="Time (s)"

# Input files
mpi_fdtd="mpi_fdtd_time_f.m"
mpi_fft="mpi_fft_time_f.m"
gpu_fdtd="gpu_fdtd_time_f.m"
gpu_fdtds="gpu_fdtds_time_f.m"
gpu_fft="gpu_fft_time_f.m"
gpu_ffts="gpu_ffts_time_f.m"
cpu_fdtd="cpu_fdtd_time_f.m"
cpu_fft="cpu_fft_time_f.m"

# Output file
out_f="time_final.m"

# File information
echo "% Timing file automatically generated by bash and awk!" > $out_f

# Set up steps
if [[ "${mflag}" = "true" ]]
then
	random_f=mpi_fdtd_time_1.m
elif [[ "${cflag}" = "true" ]]
then
	random_f=cpu_fdtd_time_1.m
elif [[ "${gflag}" = "true" ]]
then
	random_f=gpu_fdtd_time_1.m
elif [[ "${fflag}" = "true" ]]
then
	random_f=gpu_fdtds_time_1.m
fi

awk "NR==1" $random_f 	>> $out_f

runs=10

for i in `seq 1 $runs`
do
	echo "% Results from run $i" >> $out_f
	if [[ "${mflag}" = "true" ]]
	then
		awk "NR==$i" $mpi_fdtd 	>> $out_f
		awk "NR==$i" $mpi_fft 	>> $out_f
	fi
	if [[ "${cflag}" = "true" ]]
	then
	awk "NR==$i" $cpu_fdtd 	>> $out_f
	awk "NR==$i" $cpu_fft 	>> $out_f
	fi
	if [[ "${gflag}" = "true" ]]
	then
	awk "NR==$i" $gpu_fdtd 	>> $out_f
	awk "NR==$i" $gpu_fft 	>> $out_f
	fi
	if [[ "${fflag}" = "true" ]]
	then
	awk "NR==$i" $gpu_fdtds >> $out_f
	awk "NR==$i" $gpu_ffts 	>> $out_f
	fi
	echo    				>> $out_f
done

# Average stuff!
echo "% Average" >> $out_f
if [[ "${cflag}" = "true" ]]
then
	echo "cpu_fdtd_time = (cpu_fdtd_time_1 + cpu_fdtd_time_2 + cpu_fdtd_time_3 + cpu_fdtd_time_4 + cpu_fdtd_time_5 + cpu_fdtd_time_6 + cpu_fdtd_time_7 + cpu_fdtd_time_8 + cpu_fdtd_time_9 + cpu_fdtd_time_10)/10;" >> $out_f
	echo "cpu_fft_time = (cpu_fft_time_1 + cpu_fft_time_2 + cpu_fft_time_3 + cpu_fft_time_4 + cpu_fft_time_5 + cpu_fft_time_6 + cpu_fft_time_7 + cpu_fft_time_8 + cpu_fft_time_9 + cpu_fft_time_10)/10;" >> $out_f
fi
if [[ "${mflag}" = "true" ]]
then
	echo "mpi_fdtd_time = (mpi_fdtd_time_1 + mpi_fdtd_time_2 + mpi_fdtd_time_3 + mpi_fdtd_time_4 + mpi_fdtd_time_5 + mpi_fdtd_time_6 + mpi_fdtd_time_7 + mpi_fdtd_time_8 + mpi_fdtd_time_9 + mpi_fdtd_time_10)/10;" >> $out_f
	echo "mpi_fft_time = (mpi_fft_time_1 + mpi_fft_time_2 + mpi_fft_time_3 + mpi_fft_time_4 + mpi_fft_time_5 + mpi_fft_time_6 + mpi_fft_time_7 + mpi_fft_time_8 + mpi_fft_time_9 + mpi_fft_time_10)/10;" >> $out_f
fi
if [[ "${gflag}" = "true" ]]
then
	echo "gpu_fdtd_time = (gpu_fdtd_time_1 + gpu_fdtd_time_2 + gpu_fdtd_time_3 + gpu_fdtd_time_4 + gpu_fdtd_time_5 + gpu_fdtd_time_6 + gpu_fdtd_time_7 + gpu_fdtd_time_8 + gpu_fdtd_time_9 + gpu_fdtd_time_10)/10;" >> $out_f
	echo "gpu_fft_time = (gpu_fft_time_1 + gpu_fft_time_2 + gpu_fft_time_3 + gpu_fft_time_4 + gpu_fft_time_5 + gpu_fft_time_6 + gpu_fft_time_7 + gpu_fft_time_8 + gpu_fft_time_9 + gpu_fft_time_10)/10;" >> $out_f
fi
if [[ "${fflag}" = "true" ]]
then
	echo "gpu_fdtds_time = (gpu_fdtds_time_1 + gpu_fdtds_time_2 + gpu_fdtds_time_3 + gpu_fdtds_time_4 + gpu_fdtds_time_5 + gpu_fdtds_time_6 + gpu_fdtds_time_7 + gpu_fdtds_time_8 + gpu_fdtds_time_9 + gpu_fdtds_time_10)/10;" >> $out_f
	echo "gpu_ffts_time = (gpu_ffts_time_1 + gpu_ffts_time_2 + gpu_ffts_time_3 + gpu_ffts_time_4 + gpu_ffts_time_5 + gpu_ffts_time_6 + gpu_ffts_time_7 + gpu_ffts_time_8 + gpu_ffts_time_9 + gpu_ffts_time_10)/10;" >> $out_f
fi

echo "% Speed up" >> $out_f
echo "% fdtd_speedup = cpu_fdtd_time./(gpu_fdtd_time/1000);" >> $out_f
echo "% fdtds_speedup = cpu_fdtd_time./(gpu_ffts_time/1000);" >> $out_f 
echo "% fft_speedup = cpu_fft_time./(gpu_fft_time/1000);" >> $out_f
echo "% ffts_speedup = cpu_fft_time./(gpu_ffts_time/1000);" >> $out_f
echo "% m_fdtd_speedup = mpi_fdtd_time./(gpu_fdtd_time/1000);" >> $out_f
echo "% m_fdtds_speedup = mpi_fdtd_time./(gpu_ffts_time/1000);" >> $out_f
echo "% m_fft_speedup = mpi_fft_time./(gpu_fft_time/1000);" >> $out_f
echo "% m_ffts_speedup = mpi_fft_time./(gpu_ffts_time/1000);" >> $out_f


# Plotting!
echo "% Plots" >> $out_f
if [[ "${cflag}" = "true" ]]
then
	echo -e "semilogy(steps, cpu_fdtd_time, '-g', 'LineWidth', 2)"	 	>> $out_f  
	echo -e "hold on"											 	 	>> $out_f 
	echo -e "semilogy(steps, cpu_fft_time, '-y', 'LineWidth', 2)"	 	>> $out_f 
fi

if [[ "${mflag}" = "true" ]]
then
	echo -e "hold on"											  	 	>> $out_f 
	echo -e "semilogy(steps, mpi_fdtd_time, '-r', 'LineWidth', 2)"	 	>> $out_f
	echo -e "hold on"											 	 	>> $out_f 
	echo -e "semilogy(steps, mpi_fft_time, '-b', 'LineWidth', 2)"	 	>> $out_f 
fi

if [[ "${gflag}" = "true" ]]
then
	echo -e "hold on"											 	 	>> $out_f 
	echo -e "semilogy(steps, gpu_fdtd_time/1000, '-c', 'LineWidth', 2)"	>> $out_f
	echo -e "hold on"											     	>> $out_f
	echo -e "semilogy(steps, gpu_fft_time/1000, '-m', 'LineWidth', 2)"	>> $out_f
fi

if [[ "${fflag}" = "true" ]]
then
	echo -e "hold on"										  	     	>> $out_f
	echo -e "semilogy(steps, gpu_fdtds_time/1000, '-.c', 'LineWidth', 2)">> $out_f
	echo -e "hold on"											  	 	>> $out_f
	echo -e "semilogy(steps, gpu_ffts_time/1000, '-.m', 'LineWidth', 2)">> $out_f
fi

# Plot details
echo -e "xlabel('$xlabel')"  >> $out_f 
echo -e "ylabel('$ylabel')"  >> $out_f 
#echo -e "grid on;"           >> $out_f 

# Legend
echo -ne "%legend('CPU FDTD', 'CPU PS', 'MPI FDTD', 'MPI PS', 'GPU FDTD', 'GPU FDTD (S)', 'GPU PS', 'GPU PS (S)', 0);" >> $out_f 

